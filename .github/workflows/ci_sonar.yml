
name: CI + SonarQube Angular + Spring Boot

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # pour SonarQube

      ## Backend : Java & JaCoCo
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Build and test backend
        working-directory: back
        run: mvn clean verify

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco

      ## Frontend : Node + Tests + Coverage
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        working-directory: front
        run: npm install

      - name: Run frontend tests with coverage
        working-directory: front
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Upload Angular coverage report
        uses: actions/upload-artifact@v4
        with:
            name: angular-coverage
            path: front/coverage


      ## Analyse Backend avec Sonar
  sonar-analysis:
        needs: build-and-analyze
        runs-on: ubuntu-latest
    
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
    
          - name: Setup Java
            uses: actions/setup-java@v4
            with:
              java-version: 17
              distribution: temurin

          - name: Build backend (required for Sonar)
            working-directory: back
            run: mvn clean compile

          - name: Setup Node.js
            uses: actions/setup-node@v4
            with:
              node-version: 20
    
          - name: Download JaCoCo report
            uses: actions/download-artifact@v4
            with:
              name: jacoco-report
              path: back/target/site/jacoco
    
          - name: Download Angular coverage report
            uses: actions/download-artifact@v4
            with:
              name: angular-coverage
              path: front/coverage

          ## Analyse Backend avec Sonar
          - name: Analyze backend with SonarQube
            working-directory: back
            env:
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            run: >
              mvn sonar:sonar 
              -Dsonar.projectKey=melaniemdm_bobApp
              -Dsonar.projectName=melaniemdm_bobApp_back 
              -Dsonar.organization=melaniemdm 
              -Dsonar.host.url=https://sonarcloud.io 
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    ## Analyse Frontend avec Sonar
          - name: Analyze frontend with SonarQube
            uses: SonarSource/sonarqube-scan-action@v5
            with:
              projectBaseDir: front
              args: >
                -Dsonar.projectKey=melaniemdm_bobApp_front
                -Dsonar.organization=melaniemdm
                -Dsonar.sources=src
                -Dsonar.exclusions=**/*.spec.ts
                -Dsonar.tests=src
                -Dsonar.test.inclusions=**/*.spec.ts
                -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info
            env:
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

         

  ## Docker       
  docker-build-push:
    needs: sonar-analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Build et push image backend
      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest ./back
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest

      # Build et push image frontend
      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest ./front
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest